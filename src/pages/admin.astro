---
import PrimaryLayout from '~/layouts/PrimaryLayout.astro';
---

<PrimaryLayout title="Admin Maquiavelo Wines">
	<body class="bg-gray-100 font-sans text-gray-800">
		<div class="mx-auto my-16 grid max-w-xl text-center lg:my-32">
			<h1 class="mb-6 text-3xl font-bold">Panel de administración</h1>

			<!-- Login UI -->
			<div id="login-ui" class="mb-6">
				<input
					id="password-input"
					type="password"
					placeholder="Contraseña"
					class="mb-2 w-full rounded border p-2 dark:text-slate-700"
				/>
				<button
					id="login-btn"
					class="w-full rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700"
				>
					Iniciar sesión
				</button>
				<p id="login-msg" class="mt-2 text-sm text-red-600"></p>
			</div>

			<!-- Admin Panel -->
			<div id="admin-panel" class="hidden rounded bg-white p-6 shadow dark:bg-slate-700">
				<h2 class="mb-4 text-xl font-semibold">Actualizar stock de productos</h2>

				<div class="mb-4">
					<label for="product-select" class="mb-1 block font-medium">Producto:</label>
					<select id="product-select" class="w-full rounded border p-2 dark:text-slate-700"
					></select>
				</div>

				<div class="mb-4">
					<label for="stock-input" class="mb-1 block font-medium">¿Hay stock disponible?</label>
					<select id="stock-input" class="w-full rounded border p-2 dark:text-slate-700">
						<option value="true">Sí</option>
						<option value="false">No</option>
					</select>
				</div>

				<button
					id="update-stock-btn"
					class="rounded bg-green-600 px-4 py-2 text-white hover:bg-green-700"
				>
					Actualizar Stock
				</button>

				<p id="status-msg" class="mt-4 text-sm text-gray-700 dark:text-gray-100"></p>
			</div>
		</div>

		<script type="module" is:inline>
			const ADMIN_PASSWORD = import.meta.env.PUBLIC_ADMIN_PASSWORD;

			const loginBtn = document.getElementById('login-btn');
			const logoutBtn = document.getElementById('logout-btn');
			const userInfo = document.getElementById('user-info');
			const adminPanel = document.getElementById('admin-panel');
			const productSelect = document.getElementById('product-select');
			const stockInput = document.getElementById('stock-input');
			const updateBtn = document.getElementById('update-stock-btn');
			const statusMsg = document.getElementById('status-msg');

			let products = [];

			function updateUI(user) {
				if (!loginBtn || !logoutBtn || !userInfo || !adminPanel) return;

				if (user) {
					loginBtn.classList.add('hidden');
					logoutBtn.classList.remove('hidden');
					userInfo.textContent = `Hola, ${user}`;
					adminPanel.classList.remove('hidden');
					loadProducts();
				} else {
					loginBtn.classList.remove('hidden');
					logoutBtn.classList.add('hidden');
					userInfo.textContent = '';
					adminPanel.classList.add('hidden');
				}
			}

			function loadProducts() {
				fetch('/.netlify/functions/get-products', {
					method: 'GET',
					headers: {
						'x-admin-password': ADMIN_PASSWORD,
					},
				})
					.then((res) => {
						if (!res.ok) {
							throw new Error(`Error al cargar productos: ${res.status}`);
						}
						return res.json();
					})
					.then((data) => {
						products = data;
						productSelect.innerHTML = '';
						data.forEach((prod) => {
							const opt = document.createElement('option');
							opt.value = prod.id;
							opt.textContent = `${prod.name} (${prod.stock ? 'Disponible' : 'Agotado'})`;
							productSelect.appendChild(opt);
						});
						statusMsg.textContent = '';
					})
					.catch((err) => {
						statusMsg.textContent = err.message;
					});
			}

			updateBtn.onclick = async () => {
				// Aquí también deberías enviar el password en la petición update-stock
				const productId = productSelect.value;
				const stockValue = stockInput.value === 'true';

				if (!productId) {
					statusMsg.textContent = 'Selecciona un producto.';
					return;
				}

				statusMsg.textContent = 'Actualizando stock...';

				try {
					const res = await fetch('/.netlify/functions/update-stock', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
							'x-admin-password': ADMIN_PASSWORD,
						},
						body: JSON.stringify({ productId, stock: stockValue }),
					});

					const resp = await res.json();

					if (resp.success) {
						statusMsg.textContent = 'Stock actualizado correctamente.';
						const product = products.find((p) => p.id === productId);
						if (product) {
							product.stock = stockValue;
							loadProducts(); // Recarga para actualizar el texto del select
						}
					} else {
						statusMsg.textContent = 'Error al actualizar stock: ' + (resp.error || '');
					}
				} catch {
					statusMsg.textContent = 'Error al actualizar stock.';
				}
			};

			document.addEventListener('DOMContentLoaded', () => {
				// Como ya no usas netlifyIdentity para auth, simula el login con prompt:
				const user = prompt('Introduce la contraseña de administrador');
				if (user === ADMIN_PASSWORD) {
					updateUI(user);
				} else {
					updateUI(null);
				}

				loginBtn.onclick = () => {
					const pw = prompt('Introduce la contraseña de administrador');
					if (pw === ADMIN_PASSWORD) {
						updateUI(pw);
					} else {
						alert('Contraseña incorrecta');
					}
				};
				logoutBtn.onclick = () => {
					updateUI(null);
				};
			});
		</script>
	</body>
</PrimaryLayout>
