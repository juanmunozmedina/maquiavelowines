---
import { getCollectionById, getProducts } from 'storefront:client';
import { Breadcrumbs } from 'astro-breadcrumbs';
import { z } from 'zod';
import CheckboxLink from '~/components/ui/CheckboxLink.astro';
import { applyDefaultCacheHeaders } from '~/config.ts';
import ProductCard from '~/features/product/ProductCard.astro';
import PrimaryLayout from '~/layouts/PrimaryLayout.astro';
import SideColumnLayout from '~/layouts/SideColumnLayout.astro';
import { getProductStock } from '~/lib/products.ts';
import { unwrap } from '~/lib/util.ts';

import 'astro-breadcrumbs/breadcrumbs.css';

const searchParams = Object.fromEntries(Astro.url.searchParams);

const sort = z.enum(['price']).optional().parse(searchParams.sort);
const order = z.enum(['asc', 'desc']).optional().parse(searchParams.order);

applyDefaultCacheHeaders(Astro.response.headers);

const collectionId = unwrap(Astro.params.collection, 'Parámetro de colección no encontrado');
const collectionResponse = await getCollectionById({
	path: { id: collectionId },
});

if (collectionResponse.error) {
	return Astro.redirect('/');
}

const productsResponse = await getProducts({
	query: { collectionId, sort, order },
});

if (!productsResponse.data) {
	return new Response(undefined, { status: 404 });
}

const collection = collectionResponse.data;
const products = productsResponse.data.items.filter((product) => {
	return getProductStock(product);
});
---

<PrimaryLayout title={`Bodegas Maquiavelo | ${collection.name}`}>
	<div class="pt-4">
		<SideColumnLayout class="flex flex-wrap gap-4">
			<div slot="aside" class="flex flex-col gap-4 py-4">
				<header>
					<h2 class="text-2xl font-bold">
						{collection.name}
					</h2>
					<p class="text-sm font-medium text-slate-600">
						{products.length} productos
					</p>
				</header>
				<nav class="flex flex-col gap-2" aria-labelledby="sort-by-heading">
					<h3 id="sort-by-heading" class="font-semibold">Ordenar por</h3>
					<ul class="contents">
						<li>
							<CheckboxLink href={`?sort=price&order=asc`} label="Precio: de menor a mayor" />
						</li>
						<li>
							<CheckboxLink href={`?sort=price&order=desc`} label="Precio: de mayor a menor" />
						</li>
					</ul>
				</nav>
			</div>

			<section
				slot="main"
				class="grid gap-4 max-[592px]:grid-cols-[repeat(auto-fill,minmax(10rem,1fr))] min-[592px]:grid-cols-[repeat(auto-fill,minmax(16rem,1fr))]"
				aria-labelledby="products-heading"
				aria-label="Products"
			>
				<div class="col-span-full pb-2 pt-6">
					<Breadcrumbs
						linkTextFormat="capitalized"
						customizeLinks={[
							{
								index: 1,
								text: 'Categoría',
								href: 'https://maquiavelowines.com/#collection-section-heading',
							},
							{ index: 2, 'aria-disabled': true },
						]}
					>
						<svg
							slot="index"
							aria-label="Home Page"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
							><path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"> </path><polyline
								points="9 22 9 12 15 12 15 22"></polyline>
						</svg>
						<svg
							slot="separator"
							xmlns="http://www.w3.org/2000/svg"
							width="24"
							height="24"
							viewBox="0 0 24 24"
							fill="none"
							stroke="currentColor"
							stroke-width="2"
							stroke-linecap="round"
							stroke-linejoin="round"
							><polyline points="9 18 15 12 9 6"></polyline>
						</svg>
					</Breadcrumbs>
				</div>
				{products.map((product) => <ProductCard {...product} />)}
			</section>
		</SideColumnLayout>
	</div>
</PrimaryLayout>
