@import 'tailwindcss';

@config '../tailwind.config.ts';

@custom-variant dark (&:where(.dark, .dark *));

@layer base {
	:focus {
		outline: none;
	}

	:focus-visible {
		@apply ring-2 ring-offset-2;
	}

	:focus-visible,
	.focus-ring-dark :focus-visible {
		@apply ring-theme-base-900 ring-offset-theme-base-100;
	}

	.focus-ring-light :focus-visible {
		@apply ring-theme-base-100 ring-offset-theme-base-900;
	}

	.focus-ring-inset {
		@apply ring-inset ring-offset-0;
	}

	button,
	[role='button'] {
		cursor: pointer;
	}
}

@layer components {
	/*
		A responsive holy grail layout with various layers!

		References:
		- https://www.youtube.com/watch?v=c13gpBrnGEw
		- https://ryanmulligan.dev/blog/layout-breakouts/

		Example:
		<main class="content-grid">
			<header class="breakout">
				<a class="content-left" href="/">
					<SiteLogo />
				</a>
				<button class="content-right" type="button">
					<UserAvatar />
				</button>
			</header>

			<section></section>

			<footer class="breakout">
				<SocialLinks />
				<Copyright />
			</footer>
		</main>
	*/
	.content-grid,
	.content-grid > .breakout {
		& {
			--content-width: 1536px; /* Valor por defecto 2xl en Tailwind */
			--side-padding: 1rem; /* space.4 en Tailwind = 16px */
			display: grid;
			grid-auto-flow: row;
			grid-template-columns:
				[breakout-start]
				minmax(var(--side-padding), 1fr)
				[content-start content-left-start]
				calc(min(100% / 3 - var(--side-padding), var(--content-width) / 3))
				[content-left-end content-center-start]
				calc(min(100% / 3 - var(--side-padding), var(--content-width) / 3))
				[content-center-end content-right-start]
				calc(min(100% / 3 - var(--side-padding), var(--content-width) / 3))
				[content-right-end content-end]
				minmax(var(--side-padding), 1fr)
				[breakout-end];
		}

		& > * {
			grid-column: content;
		}

		& > .breakout {
			grid-column: breakout;
		}

		& > .content-left {
			grid-column: content-left;
		}

		& > .content-center {
			grid-column: content-center;
			justify-self: center;
		}

		& > .content-right {
			grid-column: content-right;
			justify-self: end;
		}
	}
}

.c-breadcrumbs.is-truncated .c-breadcrumbs__crumb {
	visibility: visible !important;
	position: relative !important;
}

.c-breadcrumbs__crumbs {
	gap: 0.5rem 0;
}

.c-breadcrumbs__link[aria-disabled='true'] {
	pointer-events: none;
	cursor: default;
}

.c-breadcrumbs__link {
	text-transform: uppercase;
	font-size: 0.75rem !important;
}

.c-breadcrumbs__link.is-current {
	color: rgb(148 163 184);
}

.dark svg[data-icon='apple-pay'] {
	color: black;
}

.dark svg[data-icon='mdi:credit-card-check'],
.dark svg[data-icon='mdi:truck'] {
	color: rgb(71 85 105);
}

.dark .by-astro svg path {
	fill: #f9f3f4;
}

/* Quitar flecha en select deshabilitado */
select[disabled] {
	-moz-appearance: none;
	-webkit-appearance: none;
	appearance: none;
	background-image: none;
	background-color: #ccc; /* O el color que prefieras */
	cursor: default;
	opacity: 0.75;
}
