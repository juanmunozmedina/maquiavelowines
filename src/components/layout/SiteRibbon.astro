<aside
	class="breakout focus-ring-light min-h-10 items-center justify-center text-balance bg-theme-base-100 px-4 py-2 text-center text-sm text-theme-base-900 dark:bg-slate-700 dark:text-theme-base-100"
	transition:persist
>
	<div
		id="popup-modal"
		tabindex="-1"
		class="popup-modal fixed left-0 right-0 top-0 z-50 hidden h-[calc(100%-1rem)] max-h-full w-full overflow-y-auto overflow-x-hidden md:inset-0"
		aria-modal="true"
		role="dialog"
	>
		<div class="relative max-h-full w-full max-w-md p-2">
			<div class="relative rounded-lg bg-gray-100 shadow dark:bg-gray-700">
				<div class="p-4 text-center md:p-5">
					<svg
						class="mx-auto mb-4 h-12 w-12 text-gray-700 dark:text-gray-100"
						aria-hidden="true"
						xmlns="http://www.w3.org/2000/svg"
						fill="none"
						viewBox="0 0 20 20"
					>
						<path
							stroke="currentColor"
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"></path>
					</svg>
					<h3 class="mb-5 text-lg font-normal text-gray-700 dark:text-gray-100">
						Por un consumo responsable.
						<br />
						Al navegar por nuestra tienda eres responsable de cumplir con la mayoría de edad legal.
					</h3>
					<button
						id="button-popup-modal"
						data-modal-hide="popup-modal"
						type="button"
						class="inline-flex items-center rounded-lg bg-green-600 px-5 py-2.5 text-center text-sm font-medium text-white hover:bg-green-800 focus:outline-none focus:ring-4 focus:ring-green-300"
					>
						Sí, tengo más de 18 años.
					</button>
					<a
						href="https://www.google.com/?hl=es"
						type="button"
						class="ms-3 rounded-lg bg-red-600 px-5 py-2.5 text-sm font-medium text-white hover:bg-red-800 focus:z-10 focus:outline-none focus:ring-4 focus:ring-red-300"
					>
						No
					</a>
				</div>
			</div>
		</div>
	</div>
	<div>
		<button
			id="theme-toggle"
			type="button"
			class="absolute right-1 top-[0.3750rem] rounded-lg p-1 text-sm text-gray-500 hover:bg-gray-100 focus:outline-none dark:text-gray-400 dark:hover:bg-gray-700 sm:right-[1rem]"
		>
			<svg
				id="theme-toggle-dark-icon"
				class="hidden h-5 w-5"
				fill="currentColor"
				viewBox="0 0 20 20"
				xmlns="http://www.w3.org/2000/svg"
				><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path></svg
			>
			<svg
				id="theme-toggle-light-icon"
				class="hidden h-5 w-5"
				fill="currentColor"
				viewBox="0 0 20 20"
				xmlns="http://www.w3.org/2000/svg"
				><path
					d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
					fill-rule="evenodd"
					clip-rule="evenodd"></path></svg
			>
		</button>
		<p class="content">¡Envío gratuito a partir de 60€!</p>
	</div>
</aside>

<script>
	import { Modal } from 'flowbite';
	import type { ModalOptions, ModalInterface } from 'flowbite';
	import type { InstanceOptions } from 'flowbite';

	const $modalElement: HTMLElement | null = document.querySelector('#popup-modal');

	const modalOptions: ModalOptions = {
		placement: 'top-center',
		backdrop: 'dynamic',
		backdropClasses: 'bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-60',
		closable: false,
	};

	// instance options object
	const instanceOptions: InstanceOptions = {
		id: 'popup-modal',
		override: true,
	};

	const modal: ModalInterface = new Modal($modalElement, modalOptions, instanceOptions);

	if (!window.localStorage.getItem('popupShown')) {
		const buttonElement = document.activeElement as HTMLElement; // Get the currently focused element
		buttonElement.blur(); // Remove focus from the button
		modal.show();
		const element = document.getElementById('button-popup-modal');
		element!.addEventListener('click', (): void => {
			window.localStorage.setItem('popupShown', 'true');
		});
	}

	var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
	var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

	// Change the icons inside the button based on previous settings
	if (
		localStorage.getItem('color-theme') === 'dark' ||
		(!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)
	) {
		themeToggleLightIcon!.classList.remove('hidden');
	} else {
		themeToggleDarkIcon!.classList.remove('hidden');
	}

	var themeToggleBtn = document.getElementById('theme-toggle');

	themeToggleBtn!.addEventListener('click', function () {
		// toggle icons inside button
		themeToggleDarkIcon!.classList.toggle('hidden');
		themeToggleLightIcon!.classList.toggle('hidden');

		// if set via local storage previously
		if (localStorage.getItem('color-theme')) {
			if (localStorage.getItem('color-theme') === 'light') {
				document.documentElement.classList.add('dark');
				localStorage.setItem('color-theme', 'dark');
			} else {
				document.documentElement.classList.remove('dark');
				localStorage.setItem('color-theme', 'light');
			}

			// if NOT set via local storage previously
		} else {
			if (document.documentElement.classList.contains('dark')) {
				document.documentElement.classList.remove('dark');
				localStorage.setItem('color-theme', 'light');
			} else {
				document.documentElement.classList.add('dark');
				localStorage.setItem('color-theme', 'dark');
			}
		}
	});
</script>
